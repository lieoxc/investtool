# Docker Compose for PostgreSQL
version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15
    container_name: fund_postgres
    restart: always
    environment:
      # 数据库名称
      POSTGRES_DB: fund
      # 数据库用户名
      POSTGRES_USER: postgres
      # 数据库密码
      POSTGRES_PASSWORD: investool123
      # PostgreSQL 配置
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      # 映射数据库端口
      - "5478:5432"
    volumes:
      # 数据持久化
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fund"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fund_network
  frontend:
    image: ghcr.io/lieoxc/investool-frontend:v1.0
    ports:
      - "8088:8080"
    environment:
      - "TZ=Asia/Shanghai"
      - "BACKEND_HOST=http://backend:9999"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - nginx:/etc/nginx
    restart: unless-stopped
    networks:
      - fund_network
  backend:
    image: ghcr.io/lieoxc/investool-backend:v1.0
    ports:
      - "9999:9999"
    environment:
      - "TZ=Asia/Shanghai"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      gmqtt:
        condition: service_started
    volumes:
      - go_configs:/go/src/app/configs
    restart: unless-stopped
    networks:
      - fund_network
      
volumes:
  postgres_data:
    driver: local
networks:
  fund_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16  # 定义网络的子网范围
          gateway: 172.20.0.1    # 定义网关地址